services:
  app:
    image: ingenieriasoftwareaplicada
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=prod,api-docs
      - MANAGEMENT_PROMETHEUS_METRICS_EXPORT_ENABLED=true
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgresql:5432/ingenieriaSoftwareAplicada
      - SPRING_LIQUIBASE_URL=jdbc:postgresql://postgresql:5432/ingenieriaSoftwareAplicada
      - SPRING_DOCKER_COMPOSE_ENABLED=false
    ports:
      - '8080:8080'
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'
        labels: 'service=app,environment=development'
    healthcheck:
      test:
        - CMD
        - curl
        - -f
        - http://localhost:8080/management/health
      interval: 5s
      timeout: 5s
      retries: 40
    depends_on:
      postgresql:
        condition: service_healthy
    networks:
      - default
      - elk

  postgresql:
    image: postgres:17.4
    environment:
      - POSTGRES_USER=ingenieriaSoftwareAplicada
      - POSTGRES_HOST_AUTH_METHOD=trust
    ports:
      - '5432:5432'
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'
        labels: 'service=postgresql,environment=development'
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U $${POSTGRES_USER}
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - default
      - elk

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.11.0
    container_name: filebeat
    user: root
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./filebeat-config.yml:/usr/share/filebeat/filebeat.yml:ro
    environment:
      - ELASTICSEARCH_HOSTS=elasticsearch:9200
      - KIBANA_HOST=kibana:5601
    depends_on:
      - elasticsearch
      - kibana
    networks:
      - elk
    command: filebeat -e -strict.perms=false

networks:
  elk:
    external: true
    name: elk-stack_elk
