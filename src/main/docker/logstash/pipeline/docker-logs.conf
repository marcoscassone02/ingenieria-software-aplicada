input {
  # Recibir logs desde Docker usando el driver de logging
  beats {
    port => 5044
  }
  
  # También recibir logs directamente desde archivos de Docker
  file {
    path => "/var/lib/docker/containers/*/*.log"
    start_position => "beginning"
    codec => "json"
    type => "docker"
  }
}

filter {
  if [type] == "docker" {
    # Parsear logs de Docker
    if [message] {
      grok {
        match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} %{WORD:level} %{GREEDYDATA:log_message}" }
      }
    }
    
    # Extraer información del contenedor
    if [container_id] {
      mutate {
        add_field => { "container_name" => "%{[container_id]}" }
      }
    }
    
    # Parsear logs de Spring Boot
    if [log_message] =~ /^\d{4}-\d{2}-\d{2}/ {
      grok {
        match => { "log_message" => "%{TIMESTAMP_ISO8601:app_timestamp} %{WORD:app_level} %{GREEDYDATA:app_message}" }
      }
    }
  }
  
  # Enriquecer con metadatos
  mutate {
    add_field => { "environment" => "development" }
    add_field => { "service" => "ingenieria-software-aplicada" }
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "docker-logs-%{+YYYY.MM.dd}"
  }
  
  # Para debugging, también enviar a stdout
  stdout {
    codec => rubydebug
  }
}
