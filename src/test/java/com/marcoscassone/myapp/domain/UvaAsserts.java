package com.marcoscassone.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class UvaAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUvaAllPropertiesEquals(Uva expected, Uva actual) {
        assertUvaAutoGeneratedPropertiesEquals(expected, actual);
        assertUvaAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUvaAllUpdatablePropertiesEquals(Uva expected, Uva actual) {
        assertUvaUpdatableFieldsEquals(expected, actual);
        assertUvaUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUvaAutoGeneratedPropertiesEquals(Uva expected, Uva actual) {
        assertThat(actual)
            .as("Verify Uva auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUvaUpdatableFieldsEquals(Uva expected, Uva actual) {
        assertThat(actual)
            .as("Verify Uva relevant properties")
            .satisfies(a -> assertThat(a.getPh()).as("check ph").isEqualTo(expected.getPh()))
            .satisfies(a -> assertThat(a.getAcidez()).as("check acidez").isEqualTo(expected.getAcidez()))
            .satisfies(a -> assertThat(a.getBrix()).as("check brix").isEqualTo(expected.getBrix()))
            .satisfies(a -> assertThat(a.getVariedad()).as("check variedad").isEqualTo(expected.getVariedad()))
            .satisfies(a -> assertThat(a.getViniedo()).as("check viniedo").isEqualTo(expected.getViniedo()))
            .satisfies(a -> assertThat(a.getCantidad()).as("check cantidad").isEqualTo(expected.getCantidad()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUvaUpdatableRelationshipsEquals(Uva expected, Uva actual) {
        // empty method
    }
}
